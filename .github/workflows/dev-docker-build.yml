name: Dev Branch Docker Build

on:
  workflow_dispatch:
  schedule:
     - cron: '0 3,9,15,21 * * *'
  pull_request:
    branches:
      - dev
    types: [opened, synchronize, reopened]
  pull_request_target:
    branches:
      - dev
    types: [opened, synchronize, reopened] 

jobs:
  dev-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Debug PR information
      if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Target branch: ${{ github.base_ref }}"
        echo "Source branch: ${{ github.head_ref }}"
        echo "PR number: ${{ github.event.number }}"
        echo "PR action: ${{ github.event.action }}"
        
    - name: Checkout dev branch
      if: github.event_name != 'pull_request_target' && github.event_name != 'pull_request'
      uses: actions/checkout@v4
      with:
        ref: dev

    - name: Checkout PR branch
      if: github.event_name == 'pull_request_target' || github.event_name == 'pull_request'
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        
    - name: Display build info
      run: |
        echo "Building from dev branch"
        echo "Environment: ${{ github.event.inputs.environment || 'development' }}"
        echo "Debug mode: ${{ github.event.inputs.debug || 'false' }}"
        echo "Triggered by: ${{ github.event_name }}"
        
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag my-image-name-dev:$(date +%s)
      
    - name: Save Docker image
      run: docker save my-image-name-dev:$(date +%s) -o docker-image-dev.tar
      
    - name: Upload Docker image artifact
      uses: actions/upload-artifact@v4.6.2
      with:
        name: flask-application-docker-image-dev-${{ github.run_number }}
        path: docker-image-dev.tar
        
    - name: Display completion message
      run: |
        echo "âœ… Dev branch Docker build completed successfully"
        echo "Image built and saved as docker-image-dev.tar"
        echo "Artifact name: flask-application-docker-image-dev-${{ github.run_number }}"
